heat_template_version: 2013-05-23

description: |
  A template that deploys open source Drone.io onto a single Linux server.
  Requires you provide a Github Application Client ID and Secret.

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - image

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - drone_deb_location
  - server_name

parameters:

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 1 GB General Purpose v1
    constraints:
      - allowed_values:
        - 1 GB General Purpose v1
        - 2 GB General Purpose v1
        - 4 GB General Purpose v1
        - 8 GB General Purpose v1
        - 15 GB I/O v1
        - 30 GB I/O v1
        - 1GB Standard Instance
        - 2GB Standard Instance
        - 4GB Standard Instance
        - 8GB Standard Instance
        - 15GB Standard Instance
        - 30GB Standard Instance
        description: must be a valid Rackspace Cloud Server flavor.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PV)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PV)
      description: Must be a supported operating system.

  server_name:
    label: Server Hostname
    description: The instance name
    type: string
    default: drone

  drone_deb_location:
    label: Drone DEB Location
    description: Location of the Drone Deb File.
    type: string
    default: |
      http://downloads.drone.io/master/drone.deb

  github_client_id:
    label: Github Application Client ID
    description: |
      The Github Application Client ID. [Register your
      application.](https://github.com/settings/applications/new)
    type: string
    default: ''
    constraints:
    - allowed_pattern: (^[0-9a-f]{20}$)|(^$)
      

  github_client_secret:
    label: Github Application Client Secret
    description: |
      The Github Application Client Secret. [Register your
      application.](https://github.com/settings/applications/new)
    type: string
    default: ''
    constraints:
    - allowed_pattern: (^[0-9a-f]{40}$)|(^$)

resources:

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  drone:
    type: "Rackspace::Cloud::Server"
    properties:
      key_name: { get_resource: ssh_key }
      flavor: { get_param: flavor }
      image: { get_param: image }
      name: { get_param: server_name }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            # Install salt-minion using Salt Bootstrap
            curl -L https://bootstrap.saltstack.com | sudo sh -s --
            salt-minion --versions
            # Set salt-minion to only use local resources
            echo "file_client: local" > /etc/salt/minion.d/local.conf
            # Make Pillar folder
            mkdir /srv/pillar
            # Clone down States
            apt-get install git -y
            git clone https://github.com/rackspace-orchestration-templates/salt-states.git /srv/salt
            # Write out Pillar top.sls
            echo "base:
              '*':
                - localhost" > /srv/pillar/top.sls
            # Write out State top.sls
            echo "base:
              '*':
                - salt-minion" > /srv/salt/top.sls
            #######################################
            ## Edit this section ##################
            #######################################
            
            # Add states to the base (4 spaces)
            echo "    - docker
                - drone
            " >> /srv/salt/top.sls
            # Example Pillar Data using %value% notation
            # See example pillar data from states repository.
            echo "
            drone:
              deb_url: %drone_deb_location%
              github_client: %github_client_id%
              github_secret: %github_client_secret%
              packages:
                - bc
                - python-pip
                - python-dev
                - build-essential
            " > /srv/pillar/localhost.sls
            #######################################
            ## END ################################
            #######################################
            # Run local highstate
            salt-call --local state.highstate
            # Open and Enable ufw
            ufw allow 443
            ufw allow 22
            ufw --force enable
          params:
            "%drone_deb_location%": { get_param: drone_deb_location }
            "%github_client_id%": { get_param: github_client_id }
            "%github_client_secret%": { get_param: github_client_secret }

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  drone_url:
    value:
      str_replace:
        template: "https://%server_ip%/install"
        params:
          "%server_ip%": { get_attr: [ drone, accessIPv4 ] }
    description: Drone URL

  server_ip:
    value: { get_attr: [ drone, accessIPv4 ] }
    description: Server IP
